// <auto-generated />
using System;
using ADJInsc.Models.Models.DBInsc;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ADJInsc.Models.Migrations
{
    [DbContext(typeof(dbActuContext))]
    [Migration("20230519194004_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Barrios", b =>
                {
                    b.Property<double?>("Barbar")
                        .HasColumnName("barbar")
                        .HasColumnType("float");

                    b.Property<double?>("Bardep")
                        .HasColumnName("bardep")
                        .HasColumnType("float");

                    b.Property<string>("Bardes")
                        .HasColumnName("bardes")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Barloc")
                        .HasColumnName("barloc")
                        .HasColumnType("float");

                    b.ToTable("Barrios");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Departamento", b =>
                {
                    b.Property<int>("DepartamentoKey")
                        .HasColumnType("int");

                    b.Property<string>("DepartamentoDesc")
                        .IsRequired()
                        .HasColumnType("char(300)")
                        .IsFixedLength(true)
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("DepartamentoKey")
                        .HasName("PK__Departam__A31840122D895C9B");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.DirDupli", b =>
                {
                    b.Property<int>("Cantidad")
                        .HasColumnName("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("InsId")
                        .HasColumnName("ins_id")
                        .HasColumnType("int");

                    b.ToTable("DirDupli");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Direccion", b =>
                {
                    b.Property<double?>("Dombar")
                        .HasColumnName("DOMBAR")
                        .HasColumnType("float");

                    b.Property<string>("Domcal")
                        .HasColumnName("DOMCAL")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Domdep")
                        .HasColumnName("DOMDEP")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Domdto")
                        .HasColumnName("DOMDTO")
                        .HasColumnType("float");

                    b.Property<double?>("Domloc")
                        .HasColumnName("DOMLOC")
                        .HasColumnType("float");

                    b.Property<string>("Domlot")
                        .HasColumnName("DOMLOT")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Dommza")
                        .HasColumnName("DOMMZA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Dompis")
                        .HasColumnName("DOMPIS")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Dompue")
                        .HasColumnName("DOMPUE")
                        .HasColumnType("float");

                    b.Property<string>("Domref")
                        .HasColumnName("DOMREF")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Flific")
                        .HasColumnName("FLIFIC")
                        .HasColumnType("float");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Familia1", b =>
                {
                    b.Property<string>("Fliapn")
                        .HasColumnName("FLIAPN")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Flicfi")
                        .HasColumnName("FLICFI")
                        .HasColumnType("float");

                    b.Property<double?>("Flicom")
                        .HasColumnName("FLICOM")
                        .HasColumnType("float");

                    b.Property<double?>("Flicui")
                        .HasColumnName("FLICUI")
                        .HasColumnType("float");

                    b.Property<double?>("Flidep")
                        .HasColumnName("FLIDEP")
                        .HasColumnType("float");

                    b.Property<double?>("Flidis")
                        .HasColumnName("FLIDIS")
                        .HasColumnType("float");

                    b.Property<double?>("Flieci")
                        .HasColumnName("FLIECI")
                        .HasColumnType("float");

                    b.Property<double?>("Flific")
                        .HasColumnName("FLIFIC")
                        .HasColumnType("float");

                    b.Property<double?>("Flifin")
                        .HasColumnName("FLIFIN")
                        .HasColumnType("float");

                    b.Property<double?>("Flifna")
                        .HasColumnName("FLIFNA")
                        .HasColumnType("float");

                    b.Property<double?>("Flilcm")
                        .HasColumnName("FLILCM")
                        .HasColumnType("float");

                    b.Property<double?>("Fliloc")
                        .HasColumnName("FLILOC")
                        .HasColumnType("float");

                    b.Property<double?>("Flinac")
                        .HasColumnName("FLINAC")
                        .HasColumnType("float");

                    b.Property<double?>("Flindo")
                        .HasColumnName("FLINDO")
                        .HasColumnType("float");

                    b.Property<double?>("Flipai")
                        .HasColumnName("FLIPAI")
                        .HasColumnType("float");

                    b.Property<double?>("Flipro")
                        .HasColumnName("FLIPRO")
                        .HasColumnType("float");

                    b.Property<double?>("Flisex")
                        .HasColumnName("FLISEX")
                        .HasColumnType("float");

                    b.Property<double?>("Flisfi")
                        .HasColumnName("FLISFI")
                        .HasColumnType("float");

                    b.Property<double?>("Flitdo")
                        .HasColumnName("FLITDO")
                        .HasColumnType("float");

                    b.Property<string>("Flitef")
                        .HasColumnName("FLITEF")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.ToTable("Familia1");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Familia2", b =>
                {
                    b.Property<string>("Fliapn")
                        .HasColumnName("FLIAPN")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Flicfi")
                        .HasColumnName("FLICFI")
                        .HasColumnType("float");

                    b.Property<double?>("Flicom")
                        .HasColumnName("FLICOM")
                        .HasColumnType("float");

                    b.Property<double?>("Flicui")
                        .HasColumnName("FLICUI")
                        .HasColumnType("float");

                    b.Property<double?>("Flidep")
                        .HasColumnName("FLIDEP")
                        .HasColumnType("float");

                    b.Property<double?>("Flidis")
                        .HasColumnName("FLIDIS")
                        .HasColumnType("float");

                    b.Property<double?>("Flieci")
                        .HasColumnName("FLIECI")
                        .HasColumnType("float");

                    b.Property<double?>("Flific")
                        .HasColumnName("FLIFIC")
                        .HasColumnType("float");

                    b.Property<double?>("Flifin")
                        .HasColumnName("FLIFIN")
                        .HasColumnType("float");

                    b.Property<double?>("Flifna")
                        .HasColumnName("FLIFNA")
                        .HasColumnType("float");

                    b.Property<double?>("Flilcm")
                        .HasColumnName("FLILCM")
                        .HasColumnType("float");

                    b.Property<double?>("Fliloc")
                        .HasColumnName("FLILOC")
                        .HasColumnType("float");

                    b.Property<double?>("Flinac")
                        .HasColumnName("FLINAC")
                        .HasColumnType("float");

                    b.Property<int?>("Flindo")
                        .HasColumnName("FLINDO")
                        .HasColumnType("int");

                    b.Property<double?>("Flipai")
                        .HasColumnName("FLIPAI")
                        .HasColumnType("float");

                    b.Property<double?>("Flipro")
                        .HasColumnName("FLIPRO")
                        .HasColumnType("float");

                    b.Property<double?>("Flisex")
                        .HasColumnName("FLISEX")
                        .HasColumnType("float");

                    b.Property<double?>("Flisfi")
                        .HasColumnName("FLISFI")
                        .HasColumnType("float");

                    b.Property<double?>("Flitdo")
                        .HasColumnName("FLITDO")
                        .HasColumnType("float");

                    b.Property<string>("Flitef")
                        .HasColumnName("FLITEF")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.ToTable("Familia2");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.InsDomici", b =>
                {
                    b.Property<int>("InsdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("insd_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int?>("InsId")
                        .HasColumnName("ins_id")
                        .HasColumnType("int");

                    b.Property<string>("InsdBarrio")
                        .HasColumnName("insd_barrio")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("InsdDepar")
                        .IsRequired()
                        .HasColumnName("insd_depar")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("InsdDirecc")
                        .IsRequired()
                        .HasColumnName("insd_direcc")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("InsdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("insd_estado")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('A')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("InsdFecalt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("insd_fecalt")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InsdFicha")
                        .HasColumnName("insd_ficha")
                        .HasColumnType("int");

                    b.Property<string>("InsdLocal")
                        .IsRequired()
                        .HasColumnName("insd_local")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("InsdRefer")
                        .HasColumnName("insd_refer")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("InsdId");

                    b.ToTable("InsDomici");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.InsFamilia", b =>
                {
                    b.Property<int>("InsfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("insf_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FecNacAnio")
                        .HasColumnName("fecNacAnio")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("FecNacDia")
                        .HasColumnName("fecNacDia")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("FecNacMes")
                        .HasColumnName("fecNacMes")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("char(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InsId")
                        .HasColumnName("ins_id")
                        .HasColumnType("int");

                    b.Property<int?>("InsfDiscapacitado")
                        .HasColumnName("insf_discapacitado")
                        .HasColumnType("int");

                    b.Property<string>("InsfEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("insf_estado")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('A')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("InsfFecalt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("insf_fecalt")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("InsfFicha")
                        .HasColumnName("insf_ficha")
                        .HasColumnType("int");

                    b.Property<int?>("InsfMinero")
                        .HasColumnName("insf_minero")
                        .HasColumnType("int");

                    b.Property<string>("InsfNombre")
                        .HasColumnName("insf_nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InsfNumdoc")
                        .HasColumnName("insf_numdoc")
                        .HasColumnType("int");

                    b.Property<string>("InsfTipdoc")
                        .HasColumnName("insf_tipdoc")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("InsfTipflia")
                        .HasColumnName("insf_tipflia")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("InsfVeterano")
                        .HasColumnName("insf_veterano")
                        .HasColumnType("int");

                    b.Property<int?>("ParentescoKey")
                        .HasColumnType("int");

                    b.HasKey("InsfId");

                    b.ToTable("InsFamilia");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Inscriptos", b =>
                {
                    b.Property<int>("InsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CodigoVerificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CuitCuil")
                        .HasColumnName("cuit_cuil")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CuitCuilDos")
                        .HasColumnName("cuit_cuil_dos")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("CuitCuilUno")
                        .HasColumnName("cuit_cuil_uno")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int?>("IdDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoFamilia")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("InsDiscapacitado")
                        .HasColumnName("ins_discapacitado")
                        .HasColumnType("int");

                    b.Property<string>("InsEmail")
                        .HasColumnName("ins_email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InsEstado")
                        .HasColumnName("ins_estado")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("InsFecUltAct")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins_fecUltAct")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("InsFecalt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins_fecalt")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("InsFecins")
                        .HasColumnName("ins_fecins")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("InsFicha")
                        .HasColumnName("ins_ficha")
                        .HasColumnType("int");

                    b.Property<int?>("InsMinero")
                        .HasColumnName("ins_minero")
                        .HasColumnType("int");

                    b.Property<string>("InsNombre")
                        .HasColumnName("ins_nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InsNumdoc")
                        .HasColumnName("ins_numdoc")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InsTelef")
                        .HasColumnName("ins_telef")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InsTipdoc")
                        .HasColumnName("ins_tipdoc")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("InsTipflia")
                        .HasColumnName("ins_tipflia")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("InsVeterano")
                        .HasColumnName("ins_veterano")
                        .HasColumnType("int");

                    b.HasKey("InsId");

                    b.HasIndex("InsNumdoc")
                        .HasName("i_ins_numdoc");

                    b.ToTable("Inscriptos");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Localidad", b =>
                {
                    b.Property<int>("LocalidadKey")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoKey")
                        .HasColumnType("int");

                    b.Property<string>("LocalidadDesc")
                        .IsRequired()
                        .HasColumnType("char(300)")
                        .IsFixedLength(true)
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("LocalidadKey", "DepartamentoKey")
                        .HasName("PK__Localida__710E3397E11306A9");

                    b.HasIndex("DepartamentoKey");

                    b.ToTable("Localidad");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Parentesco", b =>
                {
                    b.Property<int>("ParentescoKey")
                        .HasColumnType("int");

                    b.Property<string>("ParentescoDesc")
                        .IsRequired()
                        .HasColumnType("char(100)")
                        .IsFixedLength(true)
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("ParentescoKey")
                        .HasName("PK__Parentes__65BFC8FA51A06095");

                    b.ToTable("Parentesco");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.SituacionLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngresoNeto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("InscriptoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("TipoRevistaKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SituacionLaboral");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.TipoEmpleo", b =>
                {
                    b.Property<int>("TipoEmpleoKey")
                        .HasColumnType("int");

                    b.Property<string>("TipoEmpleoDesc")
                        .IsRequired()
                        .HasColumnType("char(300)")
                        .IsFixedLength(true)
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("TipoEmpleoKey")
                        .HasName("PK__TipoEmpl__B0AA76A0CBDB521B");

                    b.ToTable("TipoEmpleo");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.TipoFamilia", b =>
                {
                    b.Property<int>("TipoFamiliaKey")
                        .HasColumnType("int");

                    b.Property<string>("TipoFamiliaDesc")
                        .IsRequired()
                        .HasColumnType("char(300)")
                        .IsFixedLength(true)
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("TipoFamiliaKey")
                        .HasName("PK__TipoFami__BDC7E2A4BD7E941C");

                    b.ToTable("TipoFamilia");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.TipoIngreso", b =>
                {
                    b.Property<string>("TipoIngresoKey")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TipoIngresoDesc")
                        .IsRequired()
                        .HasColumnType("char(300)")
                        .IsFixedLength(true)
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("TipoIngresoKey")
                        .HasName("PK__TipoIngr__428196550EF67648");

                    b.ToTable("TipoIngreso");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.TipoRevista", b =>
                {
                    b.Property<int>("TipoRevistaKey")
                        .HasColumnType("int");

                    b.Property<string>("TipoRevistaDesc")
                        .IsRequired()
                        .HasColumnType("char(300)")
                        .IsFixedLength(true)
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("TipoRevistaKey")
                        .HasName("PK__TipoRevi__5C615BB5772D7F90");

                    b.ToTable("TipoRevista");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.TitularAs", b =>
                {
                    b.Property<string>("Fliapn")
                        .HasColumnName("FLIAPN")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("Flicfi")
                        .HasColumnName("FLICFI")
                        .HasColumnType("float");

                    b.Property<double?>("Flicom")
                        .HasColumnName("FLICOM")
                        .HasColumnType("float");

                    b.Property<double?>("Flicui")
                        .HasColumnName("FLICUI")
                        .HasColumnType("float");

                    b.Property<double?>("Flidep")
                        .HasColumnName("FLIDEP")
                        .HasColumnType("float");

                    b.Property<double?>("Flidis")
                        .HasColumnName("FLIDIS")
                        .HasColumnType("float");

                    b.Property<double?>("Flieci")
                        .HasColumnName("FLIECI")
                        .HasColumnType("float");

                    b.Property<double?>("Flific")
                        .HasColumnName("FLIFIC")
                        .HasColumnType("float");

                    b.Property<double?>("Flifin")
                        .HasColumnName("FLIFIN")
                        .HasColumnType("float");

                    b.Property<double?>("Flifna")
                        .HasColumnName("FLIFNA")
                        .HasColumnType("float");

                    b.Property<double?>("Flilcm")
                        .HasColumnName("FLILCM")
                        .HasColumnType("float");

                    b.Property<double?>("Fliloc")
                        .HasColumnName("FLILOC")
                        .HasColumnType("float");

                    b.Property<double?>("Flinac")
                        .HasColumnName("FLINAC")
                        .HasColumnType("float");

                    b.Property<int?>("Flindo")
                        .HasColumnName("FLINDO")
                        .HasColumnType("int");

                    b.Property<double?>("Flipai")
                        .HasColumnName("FLIPAI")
                        .HasColumnType("float");

                    b.Property<double?>("Flipro")
                        .HasColumnName("FLIPRO")
                        .HasColumnType("float");

                    b.Property<double?>("Flisex")
                        .HasColumnName("FLISEX")
                        .HasColumnType("float");

                    b.Property<double?>("Flisfi")
                        .HasColumnName("FLISFI")
                        .HasColumnType("float");

                    b.Property<double?>("Flitdo")
                        .HasColumnName("FLITDO")
                        .HasColumnType("float");

                    b.Property<string>("Flitef")
                        .HasColumnName("FLITEF")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.ToTable("TitularAS");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaveUsuario")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("usu_estado")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('A')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UsuFecalt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("usu_fecalt")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("CIX_Usuario")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ADJInsc.Models.Models.DBInsc.Localidad", b =>
                {
                    b.HasOne("ADJInsc.Models.Models.DBInsc.Departamento", "DepartamentoKeyNavigation")
                        .WithMany("Localidad")
                        .HasForeignKey("DepartamentoKey")
                        .HasConstraintName("ILOCALIDAD1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
